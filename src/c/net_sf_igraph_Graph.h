/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class net_sf_igraph_Graph */

#ifndef _Included_net_sf_igraph_Graph
#define _Included_net_sf_igraph_Graph
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     net_sf_igraph_Graph
 * Method:    destroy
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_net_sf_igraph_Graph_destroy
  (JNIEnv *, jobject);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    Empty
 * Signature: (JZ)Lnet/sf/igraph/Graph;
 */
JNIEXPORT jobject JNICALL Java_net_sf_igraph_Graph_Empty
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    addEdges
 * Signature: ([DLjava/lang/Object;)Lnet/sf/igraph/Graph;
 */
JNIEXPORT jobject JNICALL Java_net_sf_igraph_Graph_addEdges
  (JNIEnv *, jobject, jdoubleArray, jobject);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    addVertices
 * Signature: (JLjava/lang/Object;)Lnet/sf/igraph/Graph;
 */
JNIEXPORT jobject JNICALL Java_net_sf_igraph_Graph_addVertices
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    deleteVertices
 * Signature: (Lnet/sf/igraph/VertexSet;)Lnet/sf/igraph/Graph;
 */
JNIEXPORT jobject JNICALL Java_net_sf_igraph_Graph_deleteVertices
  (JNIEnv *, jobject, jobject);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    vcount
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_net_sf_igraph_Graph_vcount
  (JNIEnv *, jobject);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    ecount
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_net_sf_igraph_Graph_ecount
  (JNIEnv *, jobject);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    neighbors
 * Signature: (JLnet/sf/igraph/NeighborMode;)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_net_sf_igraph_Graph_neighbors
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    isDirected
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_net_sf_igraph_Graph_isDirected
  (JNIEnv *, jobject);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    degree
 * Signature: (Lnet/sf/igraph/VertexSet;Lnet/sf/igraph/NeighborMode;Z)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_net_sf_igraph_Graph_degree
  (JNIEnv *, jobject, jobject, jobject, jboolean);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    getEid
 * Signature: (JJZZ)J
 */
JNIEXPORT jlong JNICALL Java_net_sf_igraph_Graph_getEid
  (JNIEnv *, jobject, jlong, jlong, jboolean, jboolean);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    getEids
 * Signature: ([DZZ)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_net_sf_igraph_Graph_getEids
  (JNIEnv *, jobject, jdoubleArray, jboolean, jboolean);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    incident
 * Signature: (JLnet/sf/igraph/NeighborMode;)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_net_sf_igraph_Graph_incident
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    Create
 * Signature: ([DJZ)Lnet/sf/igraph/Graph;
 */
JNIEXPORT jobject JNICALL Java_net_sf_igraph_Graph_Create
  (JNIEnv *, jclass, jdoubleArray, jlong, jboolean);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    Star
 * Signature: (JLnet/sf/igraph/StarMode;J)Lnet/sf/igraph/Graph;
 */
JNIEXPORT jobject JNICALL Java_net_sf_igraph_Graph_Star
  (JNIEnv *, jclass, jlong, jobject, jlong);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    Lattice
 * Signature: ([DJZZZ)Lnet/sf/igraph/Graph;
 */
JNIEXPORT jobject JNICALL Java_net_sf_igraph_Graph_Lattice
  (JNIEnv *, jclass, jdoubleArray, jlong, jboolean, jboolean, jboolean);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    Ring
 * Signature: (JZZZ)Lnet/sf/igraph/Graph;
 */
JNIEXPORT jobject JNICALL Java_net_sf_igraph_Graph_Ring
  (JNIEnv *, jclass, jlong, jboolean, jboolean, jboolean);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    Full
 * Signature: (JZZ)Lnet/sf/igraph/Graph;
 */
JNIEXPORT jobject JNICALL Java_net_sf_igraph_Graph_Full
  (JNIEnv *, jclass, jlong, jboolean, jboolean);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    FullCitation
 * Signature: (JZ)Lnet/sf/igraph/Graph;
 */
JNIEXPORT jobject JNICALL Java_net_sf_igraph_Graph_FullCitation
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    Atlas
 * Signature: (I)Lnet/sf/igraph/Graph;
 */
JNIEXPORT jobject JNICALL Java_net_sf_igraph_Graph_Atlas
  (JNIEnv *, jclass, jint);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    ExtendedChordalRing
 * Signature: (J[[DZ)Lnet/sf/igraph/Graph;
 */
JNIEXPORT jobject JNICALL Java_net_sf_igraph_Graph_ExtendedChordalRing
  (JNIEnv *, jclass, jlong, jobjectArray, jboolean);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    connectNeighborhood
 * Signature: (JLnet/sf/igraph/NeighborMode;)Lnet/sf/igraph/Graph;
 */
JNIEXPORT jobject JNICALL Java_net_sf_igraph_Graph_connectNeighborhood
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    linegraph
 * Signature: ()Lnet/sf/igraph/Graph;
 */
JNIEXPORT jobject JNICALL Java_net_sf_igraph_Graph_linegraph
  (JNIEnv *, jobject);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    DeBruijn
 * Signature: (JJ)Lnet/sf/igraph/Graph;
 */
JNIEXPORT jobject JNICALL Java_net_sf_igraph_Graph_DeBruijn
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    Kautz
 * Signature: (JJ)Lnet/sf/igraph/Graph;
 */
JNIEXPORT jobject JNICALL Java_net_sf_igraph_Graph_Kautz
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    Famous
 * Signature: (Ljava/lang/String;)Lnet/sf/igraph/Graph;
 */
JNIEXPORT jobject JNICALL Java_net_sf_igraph_Graph_Famous
  (JNIEnv *, jclass, jstring);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    LcfVector
 * Signature: (J[DJ)Lnet/sf/igraph/Graph;
 */
JNIEXPORT jobject JNICALL Java_net_sf_igraph_Graph_LcfVector
  (JNIEnv *, jclass, jlong, jdoubleArray, jlong);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    ErdosRenyiGameGnp
 * Signature: (JDZZ)Lnet/sf/igraph/Graph;
 */
JNIEXPORT jobject JNICALL Java_net_sf_igraph_Graph_ErdosRenyiGameGnp
  (JNIEnv *, jclass, jlong, jdouble, jboolean, jboolean);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    ErdosRenyiGameGnm
 * Signature: (JDZZ)Lnet/sf/igraph/Graph;
 */
JNIEXPORT jobject JNICALL Java_net_sf_igraph_Graph_ErdosRenyiGameGnm
  (JNIEnv *, jclass, jlong, jdouble, jboolean, jboolean);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    GrowingRandomGame
 * Signature: (JJZZ)Lnet/sf/igraph/Graph;
 */
JNIEXPORT jobject JNICALL Java_net_sf_igraph_Graph_GrowingRandomGame
  (JNIEnv *, jclass, jlong, jlong, jboolean, jboolean);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    BarabasiAgingGame
 * Signature: (JJ[DZDDJDDDDZ)Lnet/sf/igraph/Graph;
 */
JNIEXPORT jobject JNICALL Java_net_sf_igraph_Graph_BarabasiAgingGame
  (JNIEnv *, jclass, jlong, jlong, jdoubleArray, jboolean, jdouble, jdouble, jlong, jdouble, jdouble, jdouble, jdouble, jboolean);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    RecentDegreeGame
 * Signature: (JDJJ[DZDZ)Lnet/sf/igraph/Graph;
 */
JNIEXPORT jobject JNICALL Java_net_sf_igraph_Graph_RecentDegreeGame
  (JNIEnv *, jclass, jlong, jdouble, jlong, jlong, jdoubleArray, jboolean, jdouble, jboolean);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    RecentDegreeAgingGame
 * Signature: (JJ[DZDDJJDZ)Lnet/sf/igraph/Graph;
 */
JNIEXPORT jobject JNICALL Java_net_sf_igraph_Graph_RecentDegreeAgingGame
  (JNIEnv *, jclass, jlong, jlong, jdoubleArray, jboolean, jdouble, jdouble, jlong, jlong, jdouble, jboolean);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    CallawayTraitsGame
 * Signature: (JJJ[D[[DZ)Lnet/sf/igraph/Graph;
 */
JNIEXPORT jobject JNICALL Java_net_sf_igraph_Graph_CallawayTraitsGame
  (JNIEnv *, jclass, jlong, jlong, jlong, jdoubleArray, jobjectArray, jboolean);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    EstablishmentGame
 * Signature: (JJJ[D[[DZ)Lnet/sf/igraph/Graph;
 */
JNIEXPORT jobject JNICALL Java_net_sf_igraph_Graph_EstablishmentGame
  (JNIEnv *, jclass, jlong, jlong, jlong, jdoubleArray, jobjectArray, jboolean);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    GrgGame
 * Signature: (JDZ[D[D)Lnet/sf/igraph/Graph;
 */
JNIEXPORT jobject JNICALL Java_net_sf_igraph_Graph_GrgGame
  (JNIEnv *, jclass, jlong, jdouble, jboolean, jdoubleArray, jdoubleArray);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    rewireEdges
 * Signature: (DZ)Lnet/sf/igraph/Graph;
 */
JNIEXPORT jobject JNICALL Java_net_sf_igraph_Graph_rewireEdges
  (JNIEnv *, jobject, jdouble, jboolean);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    WattsStrogatzGame
 * Signature: (JJJDZZ)Lnet/sf/igraph/Graph;
 */
JNIEXPORT jobject JNICALL Java_net_sf_igraph_Graph_WattsStrogatzGame
  (JNIEnv *, jclass, jlong, jlong, jlong, jdouble, jboolean, jboolean);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    LastcitGame
 * Signature: (JJJ[DZ)Lnet/sf/igraph/Graph;
 */
JNIEXPORT jobject JNICALL Java_net_sf_igraph_Graph_LastcitGame
  (JNIEnv *, jclass, jlong, jlong, jlong, jdoubleArray, jboolean);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    CitedTypeGame
 * Signature: (J[D[DJZ)Lnet/sf/igraph/Graph;
 */
JNIEXPORT jobject JNICALL Java_net_sf_igraph_Graph_CitedTypeGame
  (JNIEnv *, jclass, jlong, jdoubleArray, jdoubleArray, jlong, jboolean);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    CitingCitedTypeGame
 * Signature: (J[D[[DJZ)Lnet/sf/igraph/Graph;
 */
JNIEXPORT jobject JNICALL Java_net_sf_igraph_Graph_CitingCitedTypeGame
  (JNIEnv *, jclass, jlong, jdoubleArray, jobjectArray, jlong, jboolean);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    ForestFireGame
 * Signature: (JDDJZ)Lnet/sf/igraph/Graph;
 */
JNIEXPORT jobject JNICALL Java_net_sf_igraph_Graph_ForestFireGame
  (JNIEnv *, jclass, jlong, jdouble, jdouble, jlong, jboolean);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    SimpleInterconnectedIslandsGame
 * Signature: (JJDJ)Lnet/sf/igraph/Graph;
 */
JNIEXPORT jobject JNICALL Java_net_sf_igraph_Graph_SimpleInterconnectedIslandsGame
  (JNIEnv *, jclass, jlong, jlong, jdouble, jlong);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    StaticFitnessGame
 * Signature: (J[D[DZZ)Lnet/sf/igraph/Graph;
 */
JNIEXPORT jobject JNICALL Java_net_sf_igraph_Graph_StaticFitnessGame
  (JNIEnv *, jclass, jlong, jdoubleArray, jdoubleArray, jboolean, jboolean);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    StaticPowerLawGame
 * Signature: (JJDDZZZ)Lnet/sf/igraph/Graph;
 */
JNIEXPORT jobject JNICALL Java_net_sf_igraph_Graph_StaticPowerLawGame
  (JNIEnv *, jclass, jlong, jlong, jdouble, jdouble, jboolean, jboolean, jboolean);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    KRegularGame
 * Signature: (JJZZ)Lnet/sf/igraph/Graph;
 */
JNIEXPORT jobject JNICALL Java_net_sf_igraph_Graph_KRegularGame
  (JNIEnv *, jclass, jlong, jlong, jboolean, jboolean);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    HsbmGame
 * Signature: (JJ[D[[DD)Lnet/sf/igraph/Graph;
 */
JNIEXPORT jobject JNICALL Java_net_sf_igraph_Graph_HsbmGame
  (JNIEnv *, jclass, jlong, jlong, jdoubleArray, jobjectArray, jdouble);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    DotProductGame
 * Signature: ([[DZ)Lnet/sf/igraph/Graph;
 */
JNIEXPORT jobject JNICALL Java_net_sf_igraph_Graph_DotProductGame
  (JNIEnv *, jclass, jobjectArray, jboolean);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    SampleSphereSurface
 * Signature: (JJDZ)[[D
 */
JNIEXPORT jobjectArray JNICALL Java_net_sf_igraph_Graph_SampleSphereSurface
  (JNIEnv *, jclass, jlong, jlong, jdouble, jboolean);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    SampleSphereVolume
 * Signature: (JJDZ)[[D
 */
JNIEXPORT jobjectArray JNICALL Java_net_sf_igraph_Graph_SampleSphereVolume
  (JNIEnv *, jclass, jlong, jlong, jdouble, jboolean);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    SampleDirichlet
 * Signature: (J[D)[[D
 */
JNIEXPORT jobjectArray JNICALL Java_net_sf_igraph_Graph_SampleDirichlet
  (JNIEnv *, jclass, jlong, jdoubleArray);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    areConnected
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_net_sf_igraph_Graph_areConnected
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    minimumSpanningTreeUnweighted
 * Signature: ()Lnet/sf/igraph/Graph;
 */
JNIEXPORT jobject JNICALL Java_net_sf_igraph_Graph_minimumSpanningTreeUnweighted
  (JNIEnv *, jobject);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    minimumSpanningTreePrim
 * Signature: ([D)Lnet/sf/igraph/Graph;
 */
JNIEXPORT jobject JNICALL Java_net_sf_igraph_Graph_minimumSpanningTreePrim
  (JNIEnv *, jobject, jdoubleArray);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    shortestPaths
 * Signature: (Lnet/sf/igraph/VertexSet;Lnet/sf/igraph/VertexSet;Lnet/sf/igraph/NeighborMode;)[[D
 */
JNIEXPORT jobjectArray JNICALL Java_net_sf_igraph_Graph_shortestPaths
  (JNIEnv *, jobject, jobject, jobject, jobject);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    subgraph
 * Signature: (Lnet/sf/igraph/VertexSet;)Lnet/sf/igraph/Graph;
 */
JNIEXPORT jobject JNICALL Java_net_sf_igraph_Graph_subgraph
  (JNIEnv *, jobject, jobject);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    constraint
 * Signature: (Lnet/sf/igraph/VertexSet;[D)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_net_sf_igraph_Graph_constraint
  (JNIEnv *, jobject, jobject, jdoubleArray);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    maxdegree
 * Signature: (Lnet/sf/igraph/VertexSet;Lnet/sf/igraph/NeighborMode;Z)J
 */
JNIEXPORT jlong JNICALL Java_net_sf_igraph_Graph_maxdegree
  (JNIEnv *, jobject, jobject, jobject, jboolean);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    density
 * Signature: (Z)D
 */
JNIEXPORT jdouble JNICALL Java_net_sf_igraph_Graph_density
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    neighborhoodSize
 * Signature: (Lnet/sf/igraph/VertexSet;JLnet/sf/igraph/NeighborMode;J)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_net_sf_igraph_Graph_neighborhoodSize
  (JNIEnv *, jobject, jobject, jlong, jobject, jlong);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    topologicalSorting
 * Signature: (Lnet/sf/igraph/NeighborMode;)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_net_sf_igraph_Graph_topologicalSorting
  (JNIEnv *, jobject, jobject);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    isDag
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_net_sf_igraph_Graph_isDag
  (JNIEnv *, jobject);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    isSimple
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_net_sf_igraph_Graph_isSimple
  (JNIEnv *, jobject);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    hasMultiple
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_net_sf_igraph_Graph_hasMultiple
  (JNIEnv *, jobject);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    addEdge
 * Signature: (JJ)Lnet/sf/igraph/Graph;
 */
JNIEXPORT jobject JNICALL Java_net_sf_igraph_Graph_addEdge
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    Centralization
 * Signature: ([DDZ)D
 */
JNIEXPORT jdouble JNICALL Java_net_sf_igraph_Graph_Centralization
  (JNIEnv *, jclass, jdoubleArray, jdouble, jboolean);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    assortativity
 * Signature: ([D[DZ)D
 */
JNIEXPORT jdouble JNICALL Java_net_sf_igraph_Graph_assortativity
  (JNIEnv *, jobject, jdoubleArray, jdoubleArray, jboolean);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    assortativityDegree
 * Signature: (Z)D
 */
JNIEXPORT jdouble JNICALL Java_net_sf_igraph_Graph_assortativityDegree
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    radius
 * Signature: (Lnet/sf/igraph/NeighborMode;)D
 */
JNIEXPORT jdouble JNICALL Java_net_sf_igraph_Graph_radius
  (JNIEnv *, jobject, jobject);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    IsDegreeSequence
 * Signature: ([D[D)Z
 */
JNIEXPORT jboolean JNICALL Java_net_sf_igraph_Graph_IsDegreeSequence
  (JNIEnv *, jclass, jdoubleArray, jdoubleArray);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    IsGraphicalDegreeSequence
 * Signature: ([D[D)Z
 */
JNIEXPORT jboolean JNICALL Java_net_sf_igraph_Graph_IsGraphicalDegreeSequence
  (JNIEnv *, jclass, jdoubleArray, jdoubleArray);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    isConnected
 * Signature: (Lnet/sf/igraph/Connectedness;)Z
 */
JNIEXPORT jboolean JNICALL Java_net_sf_igraph_Graph_isConnected
  (JNIEnv *, jobject, jobject);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    articulationPoints
 * Signature: ()Lnet/sf/igraph/VertexSet;
 */
JNIEXPORT jobject JNICALL Java_net_sf_igraph_Graph_articulationPoints
  (JNIEnv *, jobject);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    maximalCliquesCount
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_net_sf_igraph_Graph_maximalCliquesCount
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    cliqueNumber
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_net_sf_igraph_Graph_cliqueNumber
  (JNIEnv *, jobject);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    independenceNumber
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_net_sf_igraph_Graph_independenceNumber
  (JNIEnv *, jobject);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    layoutRandom
 * Signature: ()[[D
 */
JNIEXPORT jobjectArray JNICALL Java_net_sf_igraph_Graph_layoutRandom
  (JNIEnv *, jobject);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    layoutCircle
 * Signature: (Lnet/sf/igraph/VertexSet;)[[D
 */
JNIEXPORT jobjectArray JNICALL Java_net_sf_igraph_Graph_layoutCircle
  (JNIEnv *, jobject, jobject);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    layoutGrid
 * Signature: (J)[[D
 */
JNIEXPORT jobjectArray JNICALL Java_net_sf_igraph_Graph_layoutGrid
  (JNIEnv *, jobject, jlong);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    layoutGrid3d
 * Signature: (JJ)[[D
 */
JNIEXPORT jobjectArray JNICALL Java_net_sf_igraph_Graph_layoutGrid3d
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    layoutLgl
 * Signature: (JDDDDDJ)[[D
 */
JNIEXPORT jobjectArray JNICALL Java_net_sf_igraph_Graph_layoutLgl
  (JNIEnv *, jobject, jlong, jdouble, jdouble, jdouble, jdouble, jdouble, jlong);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    layoutReingoldTilford
 * Signature: (Lnet/sf/igraph/NeighborMode;[D)[[D
 */
JNIEXPORT jobjectArray JNICALL Java_net_sf_igraph_Graph_layoutReingoldTilford
  (JNIEnv *, jobject, jobject, jdoubleArray);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    layoutReingoldTilfordCircular
 * Signature: (Lnet/sf/igraph/NeighborMode;[D)[[D
 */
JNIEXPORT jobjectArray JNICALL Java_net_sf_igraph_Graph_layoutReingoldTilfordCircular
  (JNIEnv *, jobject, jobject, jdoubleArray);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    layoutRandom3d
 * Signature: ()[[D
 */
JNIEXPORT jobjectArray JNICALL Java_net_sf_igraph_Graph_layoutRandom3d
  (JNIEnv *, jobject);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    layoutSphere
 * Signature: ()[[D
 */
JNIEXPORT jobjectArray JNICALL Java_net_sf_igraph_Graph_layoutSphere
  (JNIEnv *, jobject);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    layoutGem
 * Signature: (ZJDDD)[[D
 */
JNIEXPORT jobjectArray JNICALL Java_net_sf_igraph_Graph_layoutGem
  (JNIEnv *, jobject, jboolean, jlong, jdouble, jdouble, jdouble);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    layoutDavidsonHarel
 * Signature: (ZJJDDDDDD)[[D
 */
JNIEXPORT jobjectArray JNICALL Java_net_sf_igraph_Graph_layoutDavidsonHarel
  (JNIEnv *, jobject, jboolean, jlong, jlong, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    cocitation
 * Signature: (Lnet/sf/igraph/VertexSet;)[[D
 */
JNIEXPORT jobjectArray JNICALL Java_net_sf_igraph_Graph_cocitation
  (JNIEnv *, jobject, jobject);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    bibcoupling
 * Signature: (Lnet/sf/igraph/VertexSet;)[[D
 */
JNIEXPORT jobjectArray JNICALL Java_net_sf_igraph_Graph_bibcoupling
  (JNIEnv *, jobject, jobject);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    similarityJaccard
 * Signature: (Lnet/sf/igraph/VertexSet;Lnet/sf/igraph/NeighborMode;Z)[[D
 */
JNIEXPORT jobjectArray JNICALL Java_net_sf_igraph_Graph_similarityJaccard
  (JNIEnv *, jobject, jobject, jobject, jboolean);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    similarityDice
 * Signature: (Lnet/sf/igraph/VertexSet;Lnet/sf/igraph/NeighborMode;Z)[[D
 */
JNIEXPORT jobjectArray JNICALL Java_net_sf_igraph_Graph_similarityDice
  (JNIEnv *, jobject, jobject, jobject, jboolean);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    similarityInverseLogWeighted
 * Signature: (Lnet/sf/igraph/VertexSet;Lnet/sf/igraph/NeighborMode;)[[D
 */
JNIEXPORT jobjectArray JNICALL Java_net_sf_igraph_Graph_similarityInverseLogWeighted
  (JNIEnv *, jobject, jobject, jobject);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    Modularity
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_net_sf_igraph_Graph_Modularity
  (JNIEnv *, jclass);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    getEdgelist
 * Signature: (Z)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_net_sf_igraph_Graph_getEdgelist
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    getStochastic
 * Signature: (Z)[[D
 */
JNIEXPORT jobjectArray JNICALL Java_net_sf_igraph_Graph_getStochastic
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    motifsRandesu
 * Signature: (I[D)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_net_sf_igraph_Graph_motifsRandesu
  (JNIEnv *, jobject, jint, jdoubleArray);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    motifsRandesuEstimate
 * Signature: (I[DJ[D)J
 */
JNIEXPORT jlong JNICALL Java_net_sf_igraph_Graph_motifsRandesuEstimate
  (JNIEnv *, jobject, jint, jdoubleArray, jlong, jdoubleArray);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    motifsRandesuNo
 * Signature: (I[D)J
 */
JNIEXPORT jlong JNICALL Java_net_sf_igraph_Graph_motifsRandesuNo
  (JNIEnv *, jobject, jint, jdoubleArray);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    triadCensus
 * Signature: ()[D
 */
JNIEXPORT jdoubleArray JNICALL Java_net_sf_igraph_Graph_triadCensus
  (JNIEnv *, jobject);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    adjacentTriangles
 * Signature: (Lnet/sf/igraph/VertexSet;)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_net_sf_igraph_Graph_adjacentTriangles
  (JNIEnv *, jobject, jobject);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    union
 * Signature: (Lnet/sf/igraph/Graph;)Lnet/sf/igraph/Graph;
 */
JNIEXPORT jobject JNICALL Java_net_sf_igraph_Graph_union
  (JNIEnv *, jobject, jobject);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    intersection
 * Signature: (Lnet/sf/igraph/Graph;)Lnet/sf/igraph/Graph;
 */
JNIEXPORT jobject JNICALL Java_net_sf_igraph_Graph_intersection
  (JNIEnv *, jobject, jobject);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    difference
 * Signature: (Lnet/sf/igraph/Graph;)Lnet/sf/igraph/Graph;
 */
JNIEXPORT jobject JNICALL Java_net_sf_igraph_Graph_difference
  (JNIEnv *, jobject, jobject);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    complementer
 * Signature: (Z)Lnet/sf/igraph/Graph;
 */
JNIEXPORT jobject JNICALL Java_net_sf_igraph_Graph_complementer
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    compose
 * Signature: (Lnet/sf/igraph/Graph;)Lnet/sf/igraph/Graph;
 */
JNIEXPORT jobject JNICALL Java_net_sf_igraph_Graph_compose
  (JNIEnv *, jobject, jobject);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    mincutValue
 * Signature: ([D)D
 */
JNIEXPORT jdouble JNICALL Java_net_sf_igraph_Graph_mincutValue
  (JNIEnv *, jobject, jdoubleArray);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    vertexConnectivity
 * Signature: (Z)J
 */
JNIEXPORT jlong JNICALL Java_net_sf_igraph_Graph_vertexConnectivity
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    edgeConnectivity
 * Signature: (Z)J
 */
JNIEXPORT jlong JNICALL Java_net_sf_igraph_Graph_edgeConnectivity
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    adhesion
 * Signature: (Z)J
 */
JNIEXPORT jlong JNICALL Java_net_sf_igraph_Graph_adhesion
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    cohesion
 * Signature: (Z)J
 */
JNIEXPORT jlong JNICALL Java_net_sf_igraph_Graph_cohesion
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    isSeparator
 * Signature: (Lnet/sf/igraph/VertexSet;)Z
 */
JNIEXPORT jboolean JNICALL Java_net_sf_igraph_Graph_isSeparator
  (JNIEnv *, jobject, jobject);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    isMinimalSeparator
 * Signature: (Lnet/sf/igraph/VertexSet;)Z
 */
JNIEXPORT jboolean JNICALL Java_net_sf_igraph_Graph_isMinimalSeparator
  (JNIEnv *, jobject, jobject);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    coreness
 * Signature: (Lnet/sf/igraph/NeighborMode;)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_net_sf_igraph_Graph_coreness
  (JNIEnv *, jobject, jobject);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    isoclass
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_net_sf_igraph_Graph_isoclass
  (JNIEnv *, jobject);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    isomorphic
 * Signature: (Lnet/sf/igraph/Graph;)Z
 */
JNIEXPORT jboolean JNICALL Java_net_sf_igraph_Graph_isomorphic
  (JNIEnv *, jobject, jobject);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    isoclassSubgraph
 * Signature: ([D)J
 */
JNIEXPORT jlong JNICALL Java_net_sf_igraph_Graph_isoclassSubgraph
  (JNIEnv *, jobject, jdoubleArray);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    IsoclassCreate
 * Signature: (JJZ)Lnet/sf/igraph/Graph;
 */
JNIEXPORT jobject JNICALL Java_net_sf_igraph_Graph_IsoclassCreate
  (JNIEnv *, jclass, jlong, jlong, jboolean);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    isomorphic34
 * Signature: (Lnet/sf/igraph/Graph;)Z
 */
JNIEXPORT jboolean JNICALL Java_net_sf_igraph_Graph_isomorphic34
  (JNIEnv *, jobject, jobject);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    RunningMean
 * Signature: ([DJ)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_net_sf_igraph_Graph_RunningMean
  (JNIEnv *, jclass, jdoubleArray, jlong);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    RandomSample
 * Signature: (JJJ)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_net_sf_igraph_Graph_RandomSample
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     net_sf_igraph_Graph
 * Method:    DimSelect
 * Signature: ([D)J
 */
JNIEXPORT jlong JNICALL Java_net_sf_igraph_Graph_DimSelect
  (JNIEnv *, jclass, jdoubleArray);

#ifdef __cplusplus
}
#endif
#endif
